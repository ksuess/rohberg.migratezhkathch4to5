### You must set these options ###
[options]

# Full path to the Wordpress WXR export file.
filename = /usr/local/relaunch2018/plone_zhkath/katholischekircheimkantonzrich.wordpress.2019-02-16.xml

# Path, relative to the site root, of the folder where blog entries
# should be created.
path = blog

# The desired portal_type for blog entries.  Must be something with
# a 'text' field, and must already exist in the site.  The default,
# 'Blog Entry', may be obtained by installing Scrawl.
type = zhkathpage

# A CSS selector to find the body of a post within its full HTML page.
entry-selector = div.entry-content


### Below here there be dragons. ##################################
# (Well not really but you're less likely to need to touch it.)   #
###################################################################


[transmogrifier]
pipeline =
# Parse WXR and set up a bunch of variables.
    wxrsource
    addblogauthors
    printer
# Determine which content type pipeline to follow.
    splitter

[splitter]
blueprint = collective.transmogrifier.sections.splitter

pipeline-post-condition = python:item.get('portal_type', False) == '${options:type}'
pipeline-post =
# skip unpublished
    skip_unpublished
# Fetch body
    fetch_body
# Inject images
    fetch_html_images
# Make sure the text gets added as text/html
#    set_mimetype
# Add base folders if missing.
    folders
# Construct Dexterity content if missing.
    constructor
# Update Dexterity schema values.
    schemaupdater
# Update leftovers
# printer
    update_leftovers
# Do workflow transitions.
    workflow
# Reindex.
    reindex
# Make a savepoint every 10 items.
    savepoint

pipeline-comment-condition = python:item.get('portal_type', False) == 'plone.Comment'
pipeline-comment =
# Cleanup Wordpress-style HTML
    cleanup_text
# Convert to plaintext.
    html_to_plaintext
# Add plone.app.discussion comment.
    addcomment

pipeline-blogauthor-condition = python:item.get('portal_type', False) == 'blogauthor'
pipeline-blogauthor =
    constructor
    schemaupdater
# ---------------

[wxrsource]
blueprint = transmogrify.wordpress.blueprints.wxrsource
filename = ${options:filename}
path = ${options:path}
type = ${options:type}
import-comments = true


# Needs to:
# - parse and update image URLs
# - set path, portal_type
# - set schema vars
# - add redirector entries for old URIs

[fetch_body]
blueprint = transmogrify.wordpress.blueprints.fetch_html
url_key = _orig_url
target_key = text
selector = ${options:entry-selector}

[fetch_html_images]
blueprint = transmogrify.wordpress.blueprints.html_image_source
key = text

[set_mimetype]
blueprint = transmogrify.wordpress.blueprints.set_mimetype
key = text
mimetype = text/html

[folders]
blueprint = collective.transmogrifier.sections.folders

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[update_leftovers]
blueprint = rohberg.migratezhkathch4to5.leftoverswordpress

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[reindex]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 10

# ------------

[cleanup_text]
blueprint = transmogrify.wordpress.blueprints.text_cleanup
key = text

[html_to_plaintext]
blueprint = plone.app.transmogrifier.portaltransforms
from = text/html
target = text/plain
keys = text

[addcomment]
blueprint = transmogrify.wordpress.blueprints.comment_constructor


[skip_unpublished]
blueprint = collective.transmogrifier.sections.condition
condition = python:item.get('_transitions', False)=='publish'

[addblogauthors]
blueprint = rohberg.migratezhkathch4to5.addblogauthors

[printer]
blueprint = collective.transmogrifier.sections.logger
name = my wordpress logger
level = INFO
delete =
    text
    image
    _datafield_image
    _datafield_file
    _permissions


[printer2]
blueprint = collective.transmogrifier.sections.logger
name = my second wordpress logger
level = INFO
delete =
    text
    image
    _datafield_image
    _datafield_file
    _permissions
