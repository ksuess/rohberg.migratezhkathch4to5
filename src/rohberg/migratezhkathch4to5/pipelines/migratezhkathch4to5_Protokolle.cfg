# migratezhkathch4to5.cfg
# News Archiv

[options]
# remote-url = https://devplone.zhkath.ch/zhkath
remote-url = http://localhost:8090

# path = /www.zh.kath.ch/bildung-kultur/ethikbeitraege/
# path = /www.zh.kath.ch/organisation/fachstellen/dienststellen/mittelschulseelsorge/
# path = /www.zh.kath.ch/organisation/rechtsgrundlagen/
# path = /www.zh.kath.ch/organisation/synodalrat/geschaefte/
# path = /www.zh.kath.ch/organisation/synode/
# path = /www.zh.kath.ch/organisation/rekurskommission/
# path = /www.zh.kath.ch/organisation/gv/
# path = /www.zh.kath.ch/service/publikationen/personalwesen/handbuch/
# path = /www.zh.kath.ch/service/publikationen/infoblatt/pdf/
# path = /www.zh.kath.ch/service/publikationen/jahresberichte/archiv/

# path = ['/www.zh.kath.ch/organisation/rechtsgrundlagen/', '/www.zh.kath.ch/organisation/synodalrat/geschaefte/',  '/www.zh.kath.ch/organisation/synode/', '/www.zh.kath.ch/organisation/rekurskommission/',]

path = ['/www.zh.kath.ch/service/publikationen/personalwesen/handbuch/',     '/www.zh.kath.ch/service/publikationen/jahresberichte/archiv/',]

# path = ['/www.zh.kath.ch/bildung-kultur/ethikbeitraege/', '/www.zh.kath.ch/organisation/gv/', '/www.zh.kath.ch/organisation/fachstellen/dienststellen/mittelschulseelsorge/', '/www.zh.kath.ch/service/publikationen/infoblatt/pdf/',]

# path = ['/www.zh.kath.ch/organisation/synodalrat/geschaefte/']

[transmogrifier]
# see collective.jsonmigrator
pipeline =
    catalogsource
    removeid
    typefieldmapper
    typefieldmapperzhkathch
    delete_relateditems
    folders
    printer
    constructor
    uid
    schemaupdater
    update_leftovers
    update_dates
    positioninparentupdater
    datafields
#    browser-default
#    workflow-history
    transition_inserter
    workflowupdater
    permissions
    owner
    local_roles
    mimetype

# TODO change 'created' to 2017/01/01
[catalogsource]
blueprint = collective.jsonmigrator.catalogsource
remote-url = http://localhost:8090
remote-username = ksuess
remote-password =
catalog-path = /www.zh.kath.ch/portal_catalog
catalog-query =
    {
    'created': {'query': '2000/06/01', 'range': 'min'},
    'path': {'query': ${options:path}, 'depth': 20, 'operator': 'or'},
    }
# 'portal_type': ['News Item', 'Document', 'Folder', 'File', 'Image', 'Link'],


[removeid]
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[typefieldmapper]
blueprint = ftw.blueprints.typefieldmapper
mapping = python: {
        'News Item':  ('zhkathpage', {
            'subject': 'subjects',}),
        'Document':  ('zhkathpage', {
            'subject': 'subjects',}),
    }

[typefieldmapperzhkathch]
blueprint = rohberg.migratezhkathch4to5.typefieldmapperzhkathch

[delete_relateditems]
blueprint = collective.transmogrifier.sections.manipulator
delete = relatedItems

[folders]
blueprint = collective.transmogrifier.sections.folders

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[uid]
blueprint = plone.app.transmogrifier.uidupdater

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[update_leftovers]
blueprint = rohberg.migratezhkathch4to5.leftoversprotokolle

[update_dates]
blueprint = rohberg.migratezhkathch4to5.setdates

[positioninparentupdater]
blueprint = rohberg.migratezhkathch4to5.positioninparentupdater

[browser-default]
blueprint = plone.app.transmogrifier.browserdefault

[datafields]
blueprint = collective.jsonmigrator.datafields

[workflow-history]
blueprint = collective.jsonmigrator.workflowhistory

[transition_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = python:item.get('_transitions', None) or (((item.get('_workflow_history', None) and list(item['_workflow_history'].values())[0][-1]['review_state'])=='private') and 'retract' or 'publish')

[workflowupdater]
blueprint = plone.app.transmogrifier.workflowupdater

[printer]
blueprint = collective.transmogrifier.sections.logger
name = migratezhkathch4to5_Protokolle
level = INFO
delete =
    text
    image
    _datafield_image
    _datafield_file
    _permissions

[properties]
blueprint = collective.jsonmigrator.properties

[permissions]
blueprint = collective.jsonmigrator.permissions

[owner]
blueprint = collective.jsonmigrator.owner

[local_roles]
blueprint = collective.jsonmigrator.local_roles

[mimetype]
blueprint = collective.jsonmigrator.mimetype

[reindex-object]
blueprint = plone.app.transmogrifier.reindexobject
