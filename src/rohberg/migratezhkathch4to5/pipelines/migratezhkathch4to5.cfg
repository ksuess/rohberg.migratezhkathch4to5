# migratezhkathch4to5.cfg
# News Archiv

[transmogrifier]
# see collective.jsonmigrator
pipeline =
    catalogsource
    removeid
    typefieldmapper
    typefieldmapperfolder
    folders
    constructor
    uid
    schemaupdater
    update_leftovers
    update_dates
    positioninparentupdater
    datafields
#    browser-default
#    workflow-history
    transition_inserter
    workflowupdater
    printer
    permissions
    owner
    local_roles
    mimetype

[catalogsource]
blueprint = collective.jsonmigrator.catalogsource
remote-url = http://127.0.0.1:8090
remote-username = ksuess
remote-password =
catalog-path = /www.zh.kath.ch/portal_catalog
catalog-query =
     {'path': {'query': '/www.zh.kath.ch/news/news-archiv-2', 'depth': 5},
      'modified': {'query': '2007/01/01', 'range': 'min'}}

[removeid]
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[typefieldmapper]
blueprint = ftw.blueprints.typefieldmapper
mapping = python: {
        'News Item':  ('zhkathpage', {
            'subject': 'subjects',}),
    }

[typefieldmapperfolder]
blueprint = ftw.blueprints.typefieldmapper
mapping = python: {
        'Folder':  ('Folder', {}),
    }

[folders]
blueprint = collective.transmogrifier.sections.folders

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[uid]
blueprint = plone.app.transmogrifier.uidupdater

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[update_leftovers]
blueprint = rohberg.migratezhkathch4to5.leftovers

[update_dates]
blueprint = rohberg.migratezhkathch4to5.setdates

[positioninparentupdater]
blueprint = rohberg.migratezhkathch4to5.positioninparentupdater

[browser-default]
blueprint = plone.app.transmogrifier.browserdefault

[datafields]
blueprint = collective.jsonmigrator.datafields

[workflow-history]
blueprint = collective.jsonmigrator.workflowhistory

[transition_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = python:item.get('_transitions', None) or (((item.get('_workflow_history', None) and list(item['_workflow_history'].values())[0][-1]['review_state'])=='private') and 'retract' or 'publish')

[workflowupdater]
blueprint = plone.app.transmogrifier.workflowupdater

[printer]
blueprint = collective.transmogrifier.sections.logger
name = logger
level = INFO
delete =
    text
    _datafield_image
    _datafield_file
    _permissions

[properties]
blueprint = collective.jsonmigrator.properties

[permissions]
blueprint = collective.jsonmigrator.permissions

[owner]
blueprint = collective.jsonmigrator.owner

[local_roles]
blueprint = collective.jsonmigrator.local_roles

[mimetype]
blueprint = collective.jsonmigrator.mimetype

[reindex-object]
blueprint = plone.app.transmogrifier.reindexobject
